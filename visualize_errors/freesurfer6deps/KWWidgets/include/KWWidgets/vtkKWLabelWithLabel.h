/*=========================================================================

  Module:    $RCSfile: vtkKWWidgetWithLabelSubclass.h.in,v $

  Copyright (c) Kitware, Inc.
  All rights reserved.
  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.

     This software is distributed WITHOUT ANY WARRANTY; without even
     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
     PURPOSE.  See the above copyright notice for more information.

=========================================================================*/
// .NAME vtkKWLabelWithLabel - a vtkKWLabel associated to a vtkKWLabel
// .SECTION Description
// This class creates a composite widget associating a vtkKWLabel to a
// vtkKWLabel.
// As a subclass of vtkKWWidgetWithLabel, it inherits a label and methods to
// set its position and visibility. Note that the default label position 
// implemented in this class is on the left of the vtkKWLabel, but 
// specific positions listed in vtkKWWidgetWithLabel are supported as well.
// @ingroup kwwidgets_autogenerated_widget_with_label_group
// .SECTION Note
// This class and the corresponding code were 
// \subpage kwwidgets_autogenerated_page "generated automatically" by
// instantiating the <tt>Templates/vtkKWWidgetWithLabelSubclass.h.in</tt>
// and <tt>Templates/vtkKWWidgetWithLabelSubclass.cxx.in</tt> files for 
// the type vtkKWLabel. Classes related to the same template can be found
// in the \ref kwwidgets_autogenerated_widget_with_label_group section.
// .SECTION See Also
// vtkKWWidgetWithLabel vtkKWLabel

#ifndef __vtkKWLabelWithLabel_h
#define __vtkKWLabelWithLabel_h

#include "vtkKWWidgetWithLabel.h"

class vtkKWLabel;

class KWWidgets_EXPORT vtkKWLabelWithLabel : public vtkKWWidgetWithLabel
{
public:
  static vtkKWLabelWithLabel* New();
  vtkTypeRevisionMacro(vtkKWLabelWithLabel, vtkKWWidgetWithLabel);
  void PrintSelf(ostream& os, vtkIndent indent);

  // Description:
  // Get the vtkKWLabel that is being labeled
  virtual vtkKWLabel* GetWidget();
  
  // Description:
  // Set the layout to allow the widget that is labeled to expand
  // horizontally automatically 
  virtual void SetExpandWidget(int);
  vtkBooleanMacro(ExpandWidget, int);
  vtkGetMacro(ExpandWidget, int);

  // Description:
  // Set the string that enables balloon help for this widget.
  // Override to pass down to children.
  virtual void SetBalloonHelpString(const char *str);

  // Description:
  // Update the "enable" state of the object and its internal parts.
  // Depending on different Ivars (this->Enabled, the application's 
  // Limited Edition Mode, etc.), the "enable" state of the object is updated
  // and propagated to its internal parts/subwidgets. This will, for example,
  // enable/disable parts of the widget UI, enable/disable the visibility
  // of 3D widgets, etc.
  virtual void UpdateEnableState();

protected:
  vtkKWLabelWithLabel();
  ~vtkKWLabelWithLabel();

  // Description:
  // Create the widget
  virtual void CreateWidget();

  // Description:
  // Expand the widget that is being labeled
  int ExpandWidget;

  // Description:
  // Pack or repack the widget. To be implemented by subclasses.
  virtual void Pack();

  // Description:
  // Internal widget
  vtkKWLabel *Widget;

private:

  vtkKWLabelWithLabel(const vtkKWLabelWithLabel&); // Not implemented
  void operator=(const vtkKWLabelWithLabel&); // Not implemented
};

#endif
